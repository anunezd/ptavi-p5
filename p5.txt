Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura? 954.
* ¿Cuánto tiempo dura la captura? 56 segundos aproximadamente
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? 192.168.1.34 ¿Se
trata de una IP pública o de una IP privada? Privada ¿Por qué lo sabes? Porque se encuentra en el rango 192.168.0.0 a 192.168.255.255

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? UDP con un 96% ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real? Obviamente ya que el protocolo RTP pertenece a UDP.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos? SIP, RTP, DNS, HTTP, ICMP, ARP.
¿Cuales crees que son señal y cuales ruido? Señal sería RTP ya que es el que transmite la llamada, todos los demas serian ruido.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os? En los segundos 7, 14, 16, 38, 39 y 55.
* Y los paquetes con RTP, ¿cuándo se envı́an? Desde el segundo 17 al 38, menos en el 22.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas? DNS.
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga? 192.168.1.34
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres? 80.58.61.250

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo? http://http://ekiga.net/ip/ lo vemos en la trama 8 HTTP
* ¿Qué user agent (UA) la está pidiendo? Ekiga\r\n
* ¿Qué devuelve el servidor? 83.36.48.212
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? nos lleva a una pagina que solo contiene una direccion IP 193.147.77.73 ¿Qué es, entonces, lo
que está respondiendo el servidor? Nuestra IP publica.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo? STUN es un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública, el tipo de NAT en el que se encuentra y el puerto de Internet asociado con el puerto local a través de NAT. Esta información es usada para configurar una comunicación UDP entre dos hosts que se encuentren tras enrutadores NAT.
* ¿Podrı́as decir si estamos tras un NAT o no?

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar? Via: SIP/2.0/UDP 83.36.48.212
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP? 5060
* ¿Qué método SIP utiliza el UA para registrarse? Ekiga/2.0.3
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento? Parece que no, la trama 46 nos dice que tal nombre no existe. Y la 50 Status-Line: SIP/2.0 401 Unauthorized
* ¿Cómo sabemos si el registro se ha realizado correctamente o no? Mirando el campo Status de las tramas SIP. La trama 54 estaría OK.
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades. 3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP? Si. From: "Gregorio Robles" <sip:grex@ekiga.net>.
* ¿Qué es lo que contiene el cuerpo de la trama? La descripcion de la sesión ¿En qué formato/protocolo está? SDP.
* ¿Tiene éxito el primer intento? No ¿Cómo lo sabes? Por el campo Status-Line: SIP/2.0 407 Proxy Authentication Required
* ¿En qué se diferencia el segundo INVITE más abajo del primero? el segundo INVITE lleva Proxy-Authorization ¿A qué crees que se debe esto?

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? H.261 ¿Para qué sirven estos protocolos? Para compresion de video y transmision en tiempo real respectivamente 
* ¿Cuál es el tamaño de paquete de los mismos? Hay H.261 con un tamaño que ronda los 1000 bytes y otros que rondan los 300, sin embargo los RTP tienen siempre 214 bytes.
* ¿Se utilizan bits de padding? No parece. ..0. .... = Padding: False.
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
* ¿Cuántos bits/segundo se envı́an?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? 2 ¿por qué? Uno con el source port 5010 que envia audio con el protocolo g711a y otro con source port 5014 que envia video con el protocolo h261.
* ¿Cuántos paquetes se pierden? Parece que ninguno.
* ¿Cuál es el valor máximo del delta? en 5010 es 1290.44 ms y en 5014 1290.48 ms ¿Y qué es lo que significa el valor de delta? El valor de delta es la latencia, la latencia es la suma de retardos temporales dentro de una red.
* ¿Cuáles son los valores de jitter (medio y máximo)? En 5010 Max Jitter 119.64 ms y Mean Jitter 42.50 ms. En 5014 Max Jitter 183.10 ms y Mean Jitter 153.24 ms ¿Qué quiere decir eso? Se denomina jitter a la variabilidad tempordal durante el envío de señales digitales, una ligera desviacion de la exactitud de la señal de reloj ¿Crees que estamos ante una conversación de calidad? No porque la media del jitter es superior a los 100 ms.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado? 0 ms para ambos
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál? El 246 es el ultimo con un jitter menor a 10 ms.
* ¿A qué se debe el cambio tan brusco del jitter? a que el 247 llega con una latencia de 554.74 ms
* ¿Es comparable el cambio en el valor de jitter con el del delta? no
¿Cual es más grande? es bastante mas grande el del delta.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación? 25 segundos aproximadamente
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza? Metodo BYE
* ¿En qué trama(s)? 924, 925 y 927.
* ¿Por qué crees que se envı́a varias veces?

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER? Porque para cerrar SIP se envia un REGISTER con expires = 0.
* ¿En qué trama sucede esto? En la 950 y en la 952.
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)? En que el campo expires es igual a 0.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

